{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","props","state","musics","isPlaying","autoPlay","handlePlay","bind","handlePause","URI","this","loadData","uri","a","window","fetch","then","res","json","data","setState","button","random","Math","floor","length","url","title","img","image_url","onClick","class","src","Grid","container","direction","alignItems","IconButton","aria-label","alt","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAgEeA,E,kDAzDb,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,KACRC,WAAW,EACXC,UAAU,GAEZ,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,IACH,qFAVgB,E,qDAapB,WACEC,KAAKC,SAASD,KAAKD,O,6DAGrB,WAAgBG,GAAhB,eAAAC,EAAA,sEACqBC,OAAOC,MAAMH,GAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UADvD,OACQC,EADR,OAEET,KAAKU,SAAS,CAAEjB,OAAQgB,IAF1B,gD,gFAKA,WACET,KAAKU,SAAS,CAAEf,UAAU,M,wBAG5B,WACEK,KAAKU,SAAS,CAAEf,UAAU,M,oBAG5B,WACE,IAAKK,KAAKR,MAAMC,OAAQ,OAAO,wBAC/B,IAIIkB,EAJEC,EAASC,KAAKC,MAAMD,KAAKD,SAAWZ,KAAKR,MAAMC,OAAOsB,QACtDC,EAAMhB,KAAKR,MAAMC,OAAOmB,GAAQI,IAChCC,EAAQjB,KAAKR,MAAMC,OAAOmB,GAAQK,MAClCC,EAAMlB,KAAKR,MAAMC,OAAOmB,GAAQO,UAOtC,OAJER,EADEX,KAAKR,MAAMG,SACJ,cAAC,IAAD,CAAeyB,QAASpB,KAAKJ,aAE7B,cAAC,IAAD,CAAUwB,QAASpB,KAAKF,cAGjC,sBAAKuB,MAAM,SAAX,UACE,uDACA,cAAC,IAAD,CAAkBC,IAAKN,EAAKrB,UAAQ,IACpC,eAAC4B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAASL,MAAM,MAA1D,UACE,cAACM,EAAA,EAAD,CAAYC,aAAW,aAAvB,SAAqCjB,IACrC,uCACA,4BAAIM,IACJ,qBAAKK,IAAKJ,EAAKW,IAAI,0B,GAnDXC,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fed5cb21.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport ReactAudioPlayer from 'react-audio-player'\nimport { IconButton, Grid } from '@material-ui/core'\nimport StopIcon from '@material-ui/icons/Stop'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      musics: null,\n      isPlaying: false,\n      autoPlay: true\n    }\n    this.handlePlay = this.handlePlay.bind(this)\n    this.handlePause = this.handlePause.bind(this)\n    this.URI =\n      'https://ia803209.us.archive.org/10/items/JsonSaSlicicama/classical-music-json.json'\n  }\n\n  componentDidMount () {\n    this.loadData(this.URI)\n  }\n\n  async loadData (uri) {\n    const data = await window.fetch(uri).then(res => res.json())\n    this.setState({ musics: data })\n  }\n\n  handlePause () {\n    this.setState({ autoPlay: false })\n  }\n\n  handlePlay () {\n    this.setState({ autoPlay: true })\n  }\n\n  render () {\n    if (!this.state.musics) return <div />\n    const random = Math.floor(Math.random() * this.state.musics.length)\n    const url = this.state.musics[random].url\n    const title = this.state.musics[random].title\n    const img = this.state.musics[random].image_url\n    let button\n    if (this.state.autoPlay) {\n      button = <PlayArrowIcon onClick={this.handlePlay} />\n    } else {\n      button = <StopIcon onClick={this.handlePause} />\n    }\n    return (\n      <div class='center'>\n        <h1>enjoy classcal music!</h1>\n        <ReactAudioPlayer src={url} autoPlay />\n        <Grid container direction='row' alignItems='center' class='mui'>\n          <IconButton aria-label='Play/pause'>{button}</IconButton>\n          <h2>title</h2>\n          <p>{title}</p>\n          <img src={img} alt='music_image' />\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}